#!/usr/bin/env bash

SETUP_FLAG=/opt/eva4/runtime/.container_setup_completed

cd /opt/eva4 || exit 1

# keep the default runtime if external is mounted
if [ -d /mnt/runtime ] && [ ! -f "$SETUP_FLAG" ] && [ ! -d /mnt/runtime/registry ]; then
  mv -f ./runtime/* /mnt/runtime/
fi

# mount external dirs
EXTERNAL_DIRS="runtime log ui pvt etc"
for dir in $EXTERNAL_DIRS; do
  if [ -d "/mnt/$dir" ]; then
    rm -rf "$dir"
    ln -sf "/mnt/$dir" "/opt/eva4/$dir" || exit 1
  fi
done

# prepare if the registry is not initialized
if [ ! -d ./runtime/registry ]; then
  ./prepare || exit 2
fi

if [ ! -f "$SETUP_FLAG" ] && [ -d /mnt/init ]; then
  # init config keys if exist
  KEYS="bus cloud-manager core logs registry"
  for key in $KEYS; do
    if [ -f "/mnt/init/config/$key.yml" ]; then
      echo "Setting eva/config/$key registry key"
      ./sbin/eva-registry-cli set \
        eva/config/core - -p yaml < "/mnt/init/config/$key.yml" > /dev/null || exit 2
    fi
  done
fi

# run update if not initialized
if [ -f ./update.sh ]; then
  bash ./update.sh || exit 3
  rm -f update.sh prepare
  rmdir log > /dev/null 2>&1
fi

# launch the node
./sbin/eva-control launch &

[ -f ./etc/eva_config ] && source ./etc/eva_config

[ -z "$MAX_START_WAIT" ] && MAX_START_WAIT=10

C=0

# wait until the node becomes active
while [ $C -lt $MAX_START_WAIT ]; do
  sleep 1
  if [ "$(./sbin/bus -s /opt/eva4/var/bus.ipc rpc call eva.core test|jq -r .active)" = "true" ]; then
    break
  fi
  (( C++ ))
done

# perform initial setup if required
if [ ! -f "$SETUP_FLAG" ] && [ -d /mnt/init ]; then
  touch "$SETUP_FLAG"
  if [ -f /mnt/init/init.sh ]; then
    # launch directly init script if executable
    if [ -x /mnt/init/init.sh ]; then
      /mnt/init/init.sh || exit 4
    else
      # otherwise launch it with bash
      bash /mnt/init/init.sh || exit 4
    fi
  fi
  for file in $(ls -1 /mnt/init/init*.yml | sort); do
    ARGS=
    var_file=$(echo "$file" | sed -E 's|(.*)/init(.*)$|\1/vars\2|')
    if [ -f "$var_file" ]; then
      ARGS="--config $var_file"
    fi
    echo "Deploying $file..."
    /opt/eva4/bin/eva-cloud-manager cloud deploy -t 60 \
      -C /opt/eva4/var/bus.ipc $ARGS "$file" || exit 5
  done
  echo "Deployment completed"
fi

_term() { 
  echo "Terminating..." 
  ./sbin/eva-control stop
  exit 0
}

trap _term SIGTERM
trap _term SIGINT

# block until stopped
while [ -f ./var/eva.pid ]; do
  sleep 1
done
